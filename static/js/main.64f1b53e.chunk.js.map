{"version":3,"sources":["images/nodata.svg","images/pagenotfound.svg","components/Header.js","utils.js","components/Details.js","components/TotalStats.js","components/CustomInput.js","pages/HomePage.js","components/table/table.js","components/table/tableStories.js","pages/StatsPage.js","components/Card.js","components/LineChart.js","components/NoData.js","pages/CountryPage.js","components/Social.js","components/Footer.js","pages/PageNotFound.js","App.js","theme.js","index.js"],"names":["module","exports","MenuItems","children","Text","mt","base","md","mr","display","Header","props","React","useState","show","setShow","theme","useTheme","input","setInput","Flex","as","align","justify","wrap","padding","bg","colors","brand","color","Heading","fontFamily","fonts","heading","size","flex","Box","sm","onClick","fill","width","viewBox","xmlns","d","alignItems","Link","ReactLink","to","InputGroup","Input","onChange","e","target","value","placeholder","IconButton","icon","numberWithCommas","x","toString","replace","createObject","obj","a","i","push","slice","y","Details","name","caseNumber","deaths","recovered","tests","CustomBox","title","text","Stack","pt","CustomTitle","CustomText","numbers","fontSize","fontWeight","TotalStats","handleFly","totalData","setTotalData","useEffect","axios","get","then","response","data","catch","err","console","log","justifyContent","direction","cases","todayCases","todayDeaths","todayRecovered","CustomInput","countryName","setCountryName","m","w","variant","focusBorderColor","PseudoBox","_hover","cursor","backgroundColor","ml","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","location","Home","mapRef","useRef","toast","useToast","className","Map","ref","center","zoom","zoomControl","TileLayer","attribution","url","map","country","index","Circle","key","radius","countryInfo","Popup","ZoomControl","position","current","leafletElement","result","find","element","toLowerCase","coordinates","setTimeout","flyTo","duration","status","Table","shadow","rounded","height","overflow","TableHead","TableRow","TableHeader","px","py","borderBottomWidth","textAlign","textTransform","letterSpacing","lineHeight","TableBody","TableCell","whiteSpace","CustomTable","up","setUp","localData","setLocalData","last","setLast","sorted","sort","b","compare","attribute","comparison","sortBy","prev","Tooltip","label","item","src","flag","alt","RouterLink","critical","population","StatsPage","setData","useRouteMatch","Card","death","alignSelf","p","borderTopWidth","LineChart","id","margin","top","right","bottom","left","xScale","type","yScale","min","max","stacked","reverse","background","gray","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","scheme","pointSize","pointColor","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","legends","anchor","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","NotFound","Image","NoDataSvg","CoutryPage","historicalData","setHistoricalData","error","setError","useParams","res","timeline","changeDataForChart","NoData","undefined","htmlWidth","htmlHeight","spacing","Skeleton","isLoaded","h","Social","href","isExternal","FaGithub","FaTwitter","Footer","PageNotFound","Error404","App","minHeight","path","CountryPage","exact","Users","customTheme","900","800","700","600","ReactDOM","render","ThemeProvider","CSSReset","document","getElementById"],"mappings":"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","file":"static/js/main.64f1b53e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nodata.cb61ac4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pagenotfound.6695af99.svg\";","import React, { useState } from \"react\";\nimport {\n  Box,\n  Heading,\n  Flex,\n  Text,\n  Link,\n  useTheme,\n  Input,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n} from \"@chakra-ui/core\";\nimport { Link as ReactLink } from \"react-router-dom\";\n\nconst MenuItems = ({ children }) => (\n  <Text mt={{ base: 4, md: 0 }} mr={6} display=\"block\">\n    {children}\n  </Text>\n);\n\nconst Header = (props) => {\n  const [show, setShow] = React.useState(false);\n  const theme = useTheme();\n  const [input, setInput] = useState(\"\");\n  const handleToggle = () => setShow(!show);\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding=\"1.1rem\"\n      bg={theme.colors.brand[\"600\"]}\n      color=\"white\"\n      {...props}\n    >\n      <Flex align=\"center\" mr={5}>\n        <Heading fontFamily={theme.fonts.heading} as=\"h1\" size=\"lg\" flex={1}>\n          Corona Info\n        </Heading>\n      </Flex>\n\n      <Box display={{ sm: \"block\", md: \"none\" }} onClick={handleToggle}>\n        <svg\n          fill=\"white\"\n          width=\"12px\"\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <title>Menu</title>\n          <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n        </svg>\n      </Box>\n\n      <Box\n        display={{ sm: show ? \"block\" : \"none\", md: \"flex\" }}\n        width={{ sm: \"full\", md: \"auto\" }}\n        alignItems=\"center\"\n      >\n        <MenuItems>\n          <Link as={ReactLink} to=\"/covid-info\">\n            Home\n          </Link>\n        </MenuItems>\n        <MenuItems>\n          <Link as={ReactLink} to=\"/stats\">\n            Stats\n          </Link>\n        </MenuItems>\n        <InputGroup>\n          <Input\n            onChange={(e) => setInput(e.target.value)}\n            color=\"black\"\n            placeholder=\"Search country\"\n          />\n          <InputRightElement\n            children={\n              <Link as={ReactLink} to={`/stats/${input}`}>\n                <IconButton icon=\"search-2\" color=\"red.300\" />\n              </Link>\n            }\n          />\n        </InputGroup>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Header;\n","export const numberWithCommas = (x) => {\n  if (x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  } else {\n    return \"-\";\n  }\n};\n\nexport const changeWhiteSpaceUrl = (url) => {\n  if (typeof url === \"string\") {\n    return url.replace(/ /g, \"%20\");\n  }\n  return null;\n};\n\n//  I know, i know the variable names are soo bad b\nexport const changeDataForChart = (res) => {\n  let timeline = res.data.timeline;\n  let c = createObject(timeline.cases);\n  let d = createObject(timeline.deaths);\n  let r = createObject(timeline.recovered);\n  return { cases: c, death: d, recovered: r };\n};\nfunction createObject(obj) {\n  let a = [];\n  for (let i in obj) {\n    a.push({ x: i.slice(0, -3), y: obj[i] });\n  }\n  return a;\n}\n","import React from \"react\";\nimport { numberWithCommas } from \"../utils\";\nfunction Details({ name, caseNumber, deaths, recovered, tests }) {\n  return (\n    <div>\n      <p>Country: {name}</p>\n      <p>Total Case: {numberWithCommas(caseNumber)}</p>\n      <p>Deaths: {numberWithCommas(deaths)}</p>\n      <p>Recovered: {numberWithCommas(recovered)}</p>\n      <p>Tests: {numberWithCommas(tests)}</p>\n    </div>\n  );\n}\n\nexport default Details;\n","import React, { useEffect, useState } from \"react\";\nimport { Flex, Text, Stack, useTheme } from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport { numberWithCommas } from \"../utils\";\n\nfunction TotalStats({ handleFly }) {\n  const [totalData, setTotalData] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => setTotalData(response.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      <Flex\n        justifyContent=\"space-around\"\n        mt=\"50px\"\n        direction={[\"column\", \"row\"]}\n      >\n        <CustomBox title=\"Cases\" text={totalData.cases} />\n        <CustomBox title=\"Deaths\" text={totalData.deaths} />\n        <CustomBox title=\"Recovered\" text={totalData.recovered} />\n      </Flex>\n      <Flex\n        justifyContent=\"space-around\"\n        mt=\"50px\"\n        direction={[\"column\", \"row\"]}\n      >\n        <CustomBox title=\"Today Cases\" text={totalData.todayCases} />\n        <CustomBox title=\"Today Deaths\" text={totalData.todayDeaths} />\n        <CustomBox title=\"Today Recovered\" text={totalData.todayRecovered} />\n      </Flex>\n    </>\n  );\n}\n\nfunction CustomBox({ title, text }) {\n  return (\n    <Stack alignItems=\"center\" pt=\"4px\" flex={1}>\n      <CustomTitle text={title} />\n      <CustomText text={text} />\n    </Stack>\n  );\n}\n\nfunction CustomText({ text }) {\n  const theme = useTheme();\n  return (\n    <Text\n      fontFamily={theme.fonts.numbers}\n      fontSize=\"2rem\"\n      color={theme.colors.brand[\"800\"]}\n      fontWeight=\"900\"\n    >\n      {numberWithCommas(text)}\n    </Text>\n  );\n}\nfunction CustomTitle({ text }) {\n  const theme = useTheme();\n  return (\n    <Text\n      fontSize=\"1.4rem\"\n      fontFamily={theme.fonts.numbers}\n      fontWeight=\"bold\"\n      color=\"gray.400\"\n    >\n      {text}\n    </Text>\n  );\n}\nexport default TotalStats;\n","import React, { useState } from \"react\";\nimport { Input, PseudoBox, useTheme, Flex } from \"@chakra-ui/core\";\n\nfunction CustomInput({ handleFly }) {\n  const [countryName, setCountryName] = useState(\"\");\n  const theme = useTheme();\n  const bg = theme.colors.brand[\"800\"];\n  return (\n    <Flex m=\"auto\" alignItems=\"center\" w=\"300px\">\n      <Input\n        variant=\"flushed\"\n        color=\"white\"\n        onChange={(e) => setCountryName(e.target.value)}\n        placeholder=\"country name\"\n        focusBorderColor={bg}\n      />\n      <PseudoBox\n        _hover={{ cursor: \"pointer\" }}\n        backgroundColor=\"inherit\"\n        color={bg}\n        fontWeight=\"bold\"\n        fontSize=\"1.2rem\"\n        ml=\"1em\"\n        onClick={() => handleFly(countryName)}\n      >\n        Go\n      </PseudoBox>\n    </Flex>\n  );\n}\n\nexport default CustomInput;\n","import React, { useRef } from \"react\";\nimport L from \"leaflet\";\nimport { Map, TileLayer, Popup, Circle, ZoomControl } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport Detail from \"../components/Details\";\nimport { useToast } from \"@chakra-ui/core\";\nimport TotalStats from \"../components/TotalStats\";\nimport CustomInput from \"../components/CustomInput\";\n\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\n\nconst location = [39, 35];\nconst zoom = 5;\n// some polygon props:\n//  color: String,\n//  weight: number,\n//  dashArray: number,\n//  positions: Array,\n//  fillColor: String,\n//  stroke: Boolean,(for border)\nfunction Home({ data }) {\n  const mapRef = useRef();\n  const toast = useToast();\n\n  const handleFly = (countryName) => {\n    const { current = {} } = mapRef;\n    const { leafletElement: map } = current;\n    const result = data.find((element) => {\n      return element.country.toLowerCase() === countryName.toLowerCase();\n    });\n    if (!result) {\n      toast({\n        title: \"Country not found\",\n        status: \"error\",\n        duration: 2000,\n      });\n      return;\n    }\n    const coordinates = [result.countryInfo[\"lat\"], result.countryInfo[\"long\"]];\n    setTimeout(() => {\n      map.flyTo(coordinates, 5, { duration: 3 });\n    }, 1000);\n  };\n\n  return (\n    <div className=\"App\">\n      <Map ref={mapRef} center={location} zoom={zoom} zoomControl={false}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {data &&\n          data.map((country, index) => {\n            return (\n              <Circle\n                key={index}\n                color=\"blue\"\n                radius={30000}\n                className=\"custom-circle\"\n                center={[\n                  country.countryInfo[\"lat\"],\n                  country.countryInfo[\"long\"],\n                ]}\n              >\n                <Popup>\n                  <Detail\n                    name={country.country}\n                    caseNumber={country.cases}\n                    deaths={country.deaths}\n                    recovered={country.recovered}\n                    tests={country.tests}\n                  />\n                </Popup>\n              </Circle>\n            );\n          })}\n        <ZoomControl position=\"bottomright\" />\n      </Map>\n      <CustomInput handleFly={handleFly} />\n      <TotalStats />\n    </div>\n  );\n}\n\nexport default Home;\n","import { Box, BoxProps } from \"@chakra-ui/core\";\nimport React from \"react\";\n\nexport function Table(props: BoxProps) {\n  return (\n    <Box\n      shadow=\"sm\"\n      rounded=\"lg\"\n      height=\"80vh\"\n      overflow=\"auto\"\n      w={[\"95%\", \"80%\", \"65%\"]}\n      m=\"3em auto\"\n    >\n      <Box as=\"table\" width=\"full\" {...props} />\n    </Box>\n  );\n}\n\n/**\n * Defines a set of rows defining the head of the columns of the table. It\n * renders a `<thead>` HTML element.\n */\nexport function TableHead(props: BoxProps) {\n  return <Box cursor=\"pointer\" as=\"thead\" {...props} />;\n}\n\n/**\n * Defines a row of cells in a table. The row's cells can then be established\n * using a mix of `TableCell` and `TableHeader` elements. It renders a `<tr>`\n * HTML element.\n */\nexport function TableRow(props: BoxProps) {\n  return <Box as=\"tr\" {...props} />;\n}\n\n/**\n * Defines a cell as header of a group of table cells. It renders a `<th>` HTML\n * element.\n */\nexport function TableHeader(props: BoxProps) {\n  return (\n    <Box\n      as=\"th\"\n      px=\"6\"\n      py=\"3\"\n      borderBottomWidth=\"1px\"\n      backgroundColor=\"gray.50\"\n      textAlign=\"left\"\n      fontSize=\"xs\"\n      color=\"gray.500\"\n      textTransform=\"uppercase\"\n      letterSpacing=\"wider\"\n      lineHeight=\"1rem\"\n      fontWeight=\"bold\"\n      {...props}\n    />\n  );\n}\n\n/**\n * Encapsulates a set of table rows, indicating that they comprise the body of\n * the table. It renders a `<tbody>` HTML element.\n */\nexport function TableBody(props: BoxProps) {\n  return <Box as=\"tbody\" {...props} />;\n}\n\n/**\n * Defines a cell of a table that contains data. It renders a `<td>` HTML\n * element.\n */\nexport function TableCell(props: BoxProps) {\n  return (\n    <Box\n      as=\"td\"\n      px=\"6\"\n      py=\"4\"\n      lineHeight=\"1.25rem\"\n      whiteSpace=\"nowrap\"\n      {...props}\n    />\n  );\n}\n","import { Link, Text, Tooltip } from \"@chakra-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"./table\";\nimport { numberWithCommas } from \"../../utils\";\n\nexport const CustomTable = ({ data, url }) => {\n  const [up, setUp] = useState(false);\n  const [localData, setLocalData] = useState([]);\n  const [last, setLast] = useState(\"\");\n\n  useEffect(() => {\n    let sorted = data.sort((a, b) => compare(a, b, \"cases\"));\n    setLocalData(sorted);\n  }, [data]);\n\n  const compare = (a, b, attribute) => {\n    let comparison = 0;\n    if (a[attribute] > b[attribute]) {\n      if (!up) {\n        comparison = -1;\n      } else {\n        comparison = 1;\n      }\n    } else if (a[attribute] < b[attribute]) {\n      if (!up) {\n        comparison = 1;\n      } else {\n        comparison = -1;\n      }\n    }\n    return comparison;\n  };\n  const sortBy = (attribute) => {\n    let sorted = localData.sort((a, b) => compare(a, b, attribute));\n    if (last !== attribute) {\n      setUp(\n        false,\n        () => (sorted = data.sort((a, b) => compare(a, b, attribute)))\n      );\n    } else {\n      setUp(\n        (prev) => !prev,\n        () => (sorted = data.sort((a, b) => compare(a, b, attribute)))\n      );\n    }\n    setLast(attribute);\n    setLocalData(sorted.slice(0, 215));\n  };\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableHeader onClick={() => sortBy(\"country\")}>\n            <Tooltip label=\"You can sort fields by clicking titles\">\n              Location\n            </Tooltip>\n          </TableHeader>\n          <TableHeader onClick={() => sortBy(\"cases\")}>Confirmed</TableHeader>\n          <TableHeader onClick={() => sortBy(\"deaths\")}> Deaths</TableHeader>\n          <TableHeader onClick={() => sortBy(\"recovered\")}>\n            Recovered\n          </TableHeader>\n          <TableHeader onClick={() => sortBy(\"tests\")}>Tests</TableHeader>\n          <TableHeader onClick={() => sortBy(\"critical\")}>Critical</TableHeader>\n          <TableHeader onClick={() => sortBy(\"population\")}>\n            Population\n          </TableHeader>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {localData.map((item, index) => {\n          return (\n            <TableRow\n              key={index}\n              bg={index % 2 === 0 ? \"gray.300\" : \"gray.100\"}\n            >\n              <TableCell>\n                <img\n                  className=\"table-img\"\n                  src={item.countryInfo.flag}\n                  alt=\"flag\"\n                />\n                <Link as={RouterLink} to={`${url}/${item.country}`}>\n                  <Text mt=\"10px\" fontWeight=\"500\">\n                    {item.country}\n                  </Text>\n                </Link>\n              </TableCell>\n              <TableCell>{numberWithCommas(item.cases)}</TableCell>\n              <TableCell>{numberWithCommas(item.deaths)}</TableCell>\n              <TableCell>{numberWithCommas(item.recovered)}</TableCell>\n              <TableCell>{numberWithCommas(item.tests)}</TableCell>\n              <TableCell>{numberWithCommas(item.critical)}</TableCell>\n              <TableCell>{numberWithCommas(item.population)}</TableCell>\n            </TableRow>\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n};\n","import React from \"react\";\nimport { CustomTable } from \"../components/table/tableStories\";\nimport { useRouteMatch } from \"react-router-dom\";\n\nfunction StatsPage({ data, setData }) {\n  let { url } = useRouteMatch();\n  return (\n    <>\n      <CustomTable data={data} setData={setData} url={url} />\n    </>\n  );\n}\n\nexport default StatsPage;\n","import React from \"react\";\nimport { Box, Text, useTheme } from \"@chakra-ui/core\";\nimport { numberWithCommas } from \"../utils\";\nfunction Card({ cases, death, recovered, title }) {\n  const theme = useTheme();\n  return (\n    <Box\n      w=\"250px\"\n      textAlign=\"center\"\n      overflow=\"hidden\"\n      color=\"white\"\n      alignSelf=\"flex-start\"\n      ml=\"3em\"\n    >\n      <Text\n        fontSize=\"1.5rem\"\n        fontWeight=\"bold\"\n        fontFamily={theme.fonts.numbers}\n      >\n        {title}\n      </Text>\n      <Box p=\"6\" borderTopWidth=\"3px\" textAlign=\"left\">\n        <Text>\n          Cases:{\" \"}\n          <Box\n            fontFamily={theme.fonts.numbers}\n            fontWeight=\"bold\"\n            fontSize=\"lg\"\n            color={theme.colors.brand[\"800\"]}\n            as=\"span\"\n          >\n            {numberWithCommas(cases)}\n          </Box>\n        </Text>\n        <Text>\n          Deaths:{\" \"}\n          <Box\n            fontSize=\"lg\"\n            fontFamily={theme.fonts.numbers}\n            fontWeight=\"bold\"\n            color={theme.colors.brand[\"800\"]}\n            as=\"span\"\n          >\n            {numberWithCommas(death)}\n          </Box>\n        </Text>\n        <Text>\n          Recovered:{\" \"}\n          <Box\n            fontSize=\"lg\"\n            fontFamily={theme.fonts.numbers}\n            fontWeight=\"bold\"\n            color={theme.colors.brand[\"800\"]}\n            as=\"span\"\n          >\n            {numberWithCommas(recovered)}\n          </Box>\n        </Text>\n      </Box>\n    </Box>\n  );\n}\nexport default Card;\n","import React from \"react\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport { useTheme } from \"@chakra-ui/core\";\n\nconst LineChart = ({ data, title, color }) => {\n  const theme = useTheme();\n  console.log(\"data:\", data);\n  if (!data) {\n    return <h1>loading</h1>;\n  }\n  const d = [\n    {\n      id: title,\n      color: color,\n      data: data,\n    },\n  ];\n  return (\n    <ResponsiveLine\n      data={d}\n      margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n      xScale={{ type: \"point\" }}\n      yScale={{\n        type: \"linear\",\n        min: \"auto\",\n        max: \"auto\",\n        stacked: true,\n        reverse: false,\n      }}\n      theme={{ background: theme.colors.gray[\"200\"] }}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        orient: \"bottom\",\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: title,\n        legendOffset: 36,\n        legendPosition: \"middle\",\n      }}\n      axisLeft={{\n        orient: \"left\",\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legendOffset: -40,\n        legendPosition: \"middle\",\n      }}\n      colors={{ scheme: \"nivo\" }}\n      pointSize={10}\n      pointColor={{ theme: \"background\" }}\n      pointBorderWidth={2}\n      pointBorderColor={{ from: \"serieColor\" }}\n      pointLabel=\"y\"\n      pointLabelYOffset={-12}\n      useMesh={true}\n      legends={[\n        {\n          anchor: \"bottom-right\",\n          direction: \"column\",\n          justify: false,\n          translateX: 100,\n          translateY: 0,\n          itemsSpacing: 0,\n          itemDirection: \"left-to-right\",\n          itemWidth: 80,\n          itemHeight: 20,\n          itemOpacity: 0.75,\n          symbolSize: 12,\n          symbolShape: \"circle\",\n          symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n          effects: [\n            {\n              on: \"hover\",\n              style: {\n                itemBackground: \"rgba(0, 0, 0, .03)\",\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n    />\n  );\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport { Box, Image, Text, useTheme } from \"@chakra-ui/core\";\nimport NoDataSvg from \"../images/nodata.svg\";\n\nfunction NotFound() {\n  const theme = useTheme();\n  return (\n    <Box flex={1}>\n      <Image m=\"auto\" size=\"500px\" src={NoDataSvg} />\n      <Text\n        fontSize=\"50px\"\n        fontWeight=\"bold\"\n        fontFamily={theme.fonts.numbers}\n        color={theme.colors.brand[\"800\"]}\n        textAlign=\"center\"\n      >\n        Country Not Found{\" \"}\n      </Text>\n    </Box>\n  );\n}\n\nexport default NotFound;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { changeWhiteSpaceUrl } from \"../utils\";\n\nimport {\n  Stack,\n  Image,\n  Flex,\n  Text,\n  Box,\n  useTheme,\n  Skeleton,\n} from \"@chakra-ui/core\";\nimport Card from \"../components/Card\";\nimport LineChart from \"../components/LineChart\";\nimport { changeDataForChart } from \"../utils\";\nimport NoData from '../components/NoData'\n\nfunction CoutryPage() {\n  const [data, setData] = useState({ countryInfo: { flag: \"\" } });\n  const [historicalData, setHistoricalData] = useState({});\n  const [error, setError] = useState(false);\n  let { countryName } = useParams();\n  const theme = useTheme();\n  countryName = changeWhiteSpaceUrl(countryName);\n\n  useEffect(() => {\n    axios\n      .get(`https://disease.sh/v3/covid-19/countries/${countryName}`)\n      .then((res) => setData(res.data))\n      .catch((err) => setError(true));\n    axios\n      .get(`https://disease.sh/v3/covid-19/historical/${countryName}`)\n      .then((res) => {\n        const result = changeDataForChart(res);\n        setHistoricalData(result);\n      })\n      .catch((err) => setError(true));\n    return () => {\n      console.log(\"returning\");\n    };\n  }, [countryName]);\n\n  if (error) {\n    return <NoData />\n  }\n\n  if (historicalData === undefined || data === undefined) {\n    return <Text color=\"white\">Loading</Text>;\n  }\n\n  return (\n    <Stack flex={1} alignItems=\"center\" mt=\"2em\">\n      <Flex mt=\"1em\" alignItems=\"center\">\n        <Image\n          htmlWidth=\"100px\"\n          htmlHeight=\"30px\"\n          src={data.countryInfo.flag}\n        />\n        <Text\n          fontFamily={theme.fonts.numbers}\n          fontSize=\"32px\"\n          ml=\"1em\"\n          color=\"white\"\n        >\n          {data.country}\n        </Text>\n      </Flex>\n      <Flex w=\"100%\">\n        <Stack>\n          <Card\n            cases={data.todayCases}\n            death={data.todayDeaths}\n            recovered={data.todayRecovered}\n            title=\"Today\"\n          />\n          <Card\n            cases={data.cases}\n            death={data.deaths}\n            recovered={data.recovered}\n            title=\"Total\"\n          />\n        </Stack>\n        <Stack spacing={10} mt=\"2em\" ml=\"6em\" w=\"80%\">\n          <Skeleton w=\"75%\" isLoaded={historicalData.cases}>\n            <Box backgroundColor=\"white\" h=\"600px\" w=\"100%\">\n              <LineChart\n                title=\"cases\"\n                data={historicalData ? historicalData.cases : \"\"}\n                color=\"rgb(0,0,0)\"\n              />\n            </Box>\n          </Skeleton>\n          <Skeleton w=\"75%\" isLoaded={historicalData.cases}>\n            <Box backgroundColor=\"white\" h=\"600px\" w=\"100%\">\n              <LineChart\n                title=\"deaths\"\n                data={historicalData ? historicalData.death : \"\"}\n                color=\"hsl(353, 92%, 55%)\"\n              />\n            </Box>\n          </Skeleton>\n          <Skeleton w=\"75%\" isLoaded={historicalData.cases}>\n            <Box backgroundColor=\"white\" h=\"600px\" w=\"100%\">\n              <LineChart\n                title=\"recovered\"\n                data={historicalData ? historicalData.recovered : \"\"}\n                color=\"hsl(123, 97%, 71%)\"\n              />\n            </Box>\n          </Skeleton>\n        </Stack>\n      </Flex>\n    </Stack>\n  );\n}\n\nexport default CoutryPage;\n","import React from \"react\";\n\nimport { Box, Link, Flex } from \"@chakra-ui/core\";\nimport { FaTwitter, FaGithub } from \"react-icons/fa\";\nfunction Social() {\n  return (\n    <Flex position=\"absolute\" right=\"10\">\n      <Link href=\"https://www.github.com/furkanmavili\" isExternal>\n        <Box mr=\"1em\" size=\"25px\" as={FaGithub} color=\"gray.300\" />\n      </Link>\n      <Link href=\"https://www.twitter.com/ffmavili\" isExternal>\n        <Box size=\"25px\" as={FaTwitter} color=\"gray.300\" />\n      </Link>\n    </Flex>\n  );\n}\n\nexport default Social;\n","import React from \"react\";\nimport { Flex, Text, useTheme, Stack } from \"@chakra-ui/core\";\nimport Social from \"./Social\";\n\nfunction Footer() {\n  const theme = useTheme();\n  return (\n    <Flex\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      bg={theme.colors.brand[\"600\"]}\n      mt=\"3em\"\n    >\n      <Stack alignItems=\"center\" mt=\"1em\">\n        <Text fontWeight=\"bold\" color=\"gray.300\">\n          Data Sources\n        </Text>\n        <Text color=\"gray.100\">disease.sh, JHUCSSE, Worldometers</Text>\n      </Stack>\n      <Social />\n    </Flex>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Flex, Image } from \"@chakra-ui/core\";\nimport Error404 from \"../images/pagenotfound.svg\";\nfunction PageNotFound() {\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\" flex={1}>\n      <Image w=\"500px\" src={Error404} alt=\"Page not found\" />\n    </Flex>\n  );\n}\n\nexport default PageNotFound;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Home from \"./pages/HomePage\";\nimport Stats from \"./pages/StatsPage\";\nimport axios from \"axios\";\nimport CountryPage from \"./pages/CountryPage\";\nimport Footer from \"./components/Footer\";\nimport { Flex } from \"@chakra-ui/core\";\nimport PageNotFound from \"./pages/PageNotFound\";\n\nexport default function App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => setData(response.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      <Router>\n        <Flex direction=\"column\" minHeight=\"100vh\">\n          <Header />\n          <Switch>\n            <Route path=\"/stats/:countryName\">\n              <CountryPage />\n            </Route>\n            <Route exact path=\"/stats\">\n              <Stats data={data} setData={setData} />\n            </Route>\n            <Route path=\"/users\">\n              <Users />\n            </Route>\n            <Route exact path=\"/covid-info\">\n              <Home data={data} />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n          <Footer />\n        </Flex>\n      </Router>\n    </>\n  );\n}\n\nfunction Users() {\n  return <h1>Users</h1>;\n}\n","import { theme } from \"@chakra-ui/core\";\n\nexport const customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors,\n    brand: {\n      900: \"#1a1a2e\",\n      800: \"#e94560\",\n      700: \"#0f3460\",\n      600: \"#16213e\",\n    },\n  },\n  fonts: {\n    ...theme.fonts,\n    heading: \"'Exo 2', sans-serif\",\n    numbers: \"'Do Hyeon', sans-serif\",\n  },\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { customTheme } from \"./theme\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nReactDOM.render(\n  <ThemeProvider theme={customTheme}>\n    <CSSReset />\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}